Функциональные базы данных используются для решения аналитических задач, таких как финансовое моделирование и управление производительностью. Функциональная база данных или коротко функциональная модель отличается от реляционной модели. Функциональная модель также отличается от других аналогично названных концепций, включая модель функциональной базы данных DAPLEX и базы данных функциональных языков. 
Функциональная модель является частью категории оперативной аналитической обработки (OLAP), поскольку она включает многомерное иерархическое объединение. Но она выходит за рамки OLAP, требуя ориентирования ячейки, подобно электронной таблице, где ячейки могут быть введены или рассчитаны как функции других ячеек. Также, как и в электронных таблицах, данная модель поддерживает интерактивные вычисления, в которых значения всех зависимых ячеек автоматически обновляются каждый раз, когда изменяется значение ячейки.

Обзор
Аналитика, особенно перспективная, требует интерактивного моделирования, «что если» и экспериментов, которые большинство бизнес-аналитиков делают с электронными таблицами. Это взаимодействие с данными обеспечивается ориентацией ячейки электронной таблицы и ее способностью позволять пользователям определять ячейки, рассчитанные как функции других ячеек.
Модель реляционной базы данных не имеет таких концепций и поэтому очень ограничена в моделировании производительности и интерактивности, которую она может поддерживать. Соответственно, реляционная аналитика сильно ограничивается историческими данными, которые являются статическими. Это упускает большую часть стратегических преимуществ аналитики, которые исходят из интерактивного построения с учётом будущих изменений.
Функциональная модель основана на многомерных массивах, или «кубах», ячеек, которые, как в электронной таблице, могут быть либо внешними, либо вычисляться в формулах других ячеек. Такие кубы построены с использованием измерений, которые соответствуют иерархически организованным наборам реальных объектов, таких как продукты, географические регионы, время и т.д. Куб можно рассматривать как функцию над декартовым произведением размеров, он присваивает значение каждой ячейке, которая идентифицируется n-кортежем элементов измерения; 
Таким образом, оправдывает название «функциональная». Модель сохраняет гибкость и потенциал для взаимодействия электронных таблиц, а также многомерные иерархические согласования реляционных OLAP-инструментов. В то же время функциональная модель преодолевает ограничения как модели реляционной базы данных, так и классических электронных таблиц.
Продукты, которые в той или иной степени реализуют принципы функциональной модели, существуют уже в течение некоторого времени, например: Essbase, TM1, Alea, Microsoft Analysis Services, etc.

Аналитический контекст
Система управления предприятием обычно состоит из ряда взаимосвязанных циклов управления. Каждый цикл начинается с разработки плана, затем происходит его выполнение, результаты анализируются и сравниваются с планом. На основе этих результатов и новой оценки того, что будет в будущем, разрабатывается новый план, и этот процесс повторяется. Три компонента цикла управления - планирование, выполнение и оценка имеют разные временные перспективы. Планирование смотрит в будущее, исполнение происходит в  настоящем, а обзор анализирует прошлый опыт.
Информационные технологии играют центральную роль в обеспечении более эффективного управления циклами управления. Операционные компьютерные системы имеют дело с выполнением, в то время как аналитические компьютерные системы используются для улучшения планирования и оценки. Информационные потребности каждого компонента различны. Операционные системы обычно связаны с регистрацией транзакций и отслеживанием текущего состояния бизнес-инвентаря, незавершенного производства и т. д. 
Аналитика имеет два основных компонента: перспективную, которая применяется к планированию и ретроспективную аналитику, которая применяется к оценке.
В ретроспективной аналитике транзакции, возникающие в результате операций, сводятся воедино и накапливаются в массивы ячеек. Эти ячейки определяются как многомерные, которые имеют отношение к коммерческой деятельности: время, продукт, клиент, учетная запись, регион и т.д. Ячейки обычно размещаются в кубах, которые формируют основу для ретроспективных анализов, таких как сравнение фактической производительности и плана. Это основная область OLAP-систем. Перспективная аналитика разрабатывает подобные кубы данных, но для следующих периодов времени. Разработка предполагаемых данных, как правило, является результатом человеческого участия или математических моделей, которые управляются и контролируются посредством взаимодействия с пользователем.
Применение ИТ к древовидным компонентам цикла управления контуром развивалось со временем по мере разработки новых технологий. Запись операционных транзакций была одной из первых потребностей, которая должна быть автоматизирована за счет использования 80 перфокарт. По мере продвижения электроники записи перемещались сначала на магнитную ленту, а затем на диск. Постепенно развивалась также технология программного обеспечения и создавались системы управления базами данных, которые централизовали доступ и контроль данных.
Базы данных позволили затем разработать языки, которые облегчили создание отчетов для ретроспективной аналитики. Примерно в то же время были разработаны языки и системы для обработки многомерных данных и автоматизации математических методов прогнозирования и оптимизации в рамках перспективной аналитики. К сожалению, эта технология требовала высокого уровня знаний и не была понятна большинству конечных пользователей. Таким образом, его пользовательское принятие было ограничено, и поэтому были получены выгоды от него.
До появления электронной таблицы для перспективной аналитики не было широкого инструмента. Впервые у конечных пользователей появился инструмент, который они могли понять и контролировать, и использовать его для моделирования своего бизнеса, как они его понимали. Они могли взаимодействовать, экспериментировать, приспосабливаться к изменяющимся ситуациям и быстро получать информацию и оценивать. В результате электронные таблицы были приняты широко и в конечном итоге стали повсеместными. По сей день электронные таблицы остаются незаменимым инструментом в сфере планирования.

Таблицы и функциональная модель
Электронные таблицы имеют ключевой набор характеристик, которые облегчают моделирование и анализ. Данные из нескольких источников могут быть собраны вместе на одном листе. Ячейки могут быть определены с помощью формул в других ячейках, поэтому факты из разных источников могут быть логически связаны между собой для вычисления производных значений. 
Вычисляемые ячейки обновляются автоматически при изменении любых входных ячеек, от которых они зависят. Когда у пользователя возникает вопрос «что если», он просто меняет некоторые ячейки данных, и автоматически все зависимые ячейки обновляются. Кроме того, ячейки организованы в прямоугольные сетки и сопоставлены, так что существенные различия могут быть замечены с первого взгляда или с помощью связанных графических дисплеев. Табличные обычно содержат расчеты объединения вдоль строк и столбцов. Это позволяет выявлять тенденции в совокупности, которые могут не проявляться на детальном уровне.
Но электронные таблицы страдают от ряда недостатков. Ячейки определяются положением строки и столбца, а не бизнес-концепциями, которые они представляют. Таблицы двумерны, и несколько страниц обеспечивают видимость трех измерений, но бизнес-данные часто имеют больше измерений. Если пользователи хотят выполнить еще один анализ на одном и том же наборе данных, данные необходимо дублировать. Ссылки на таблицы могут иногда использоваться, но чаще всего непрактичны. Совокупный эффект этих ограничений заключается в том, что существует ограничение на сложность электронных таблиц, которые могут быть созданы и управляться. Хотя функциональная модель сохраняет ключевые характеристики электронной таблицы, она также преодолевает ее основные ограничения. С функциональной моделью данные располагаются в сетке ячеек, ячейки определяются бизнес-концепцией вместо простой строки или столбца. Объектами функциональной модели являются размеры и кубы. Вместо двух или трех измерений: строки, столбца и листа функциональная модель поддерживает столько измерений, сколько необходимо.
Еще одно преимущество функциональной модели заключается в том, что она представляет собой базу данных с такими функциями, как независимость данных, одновременный доступ к нескольким пользователям, целостность, масштабируемость, безопасность, журнал аудита, резервное копирование / восстановление и интеграцию данных.Независимость данных особенно важна для аналитики. Данные больше не должны находиться в электронных таблицах. Вместо этого функциональная база данных выступает в качестве центрального информационного ресурса. 
Электронная таблица действует как пользовательский интерфейс к базе данных, поэтому одни и те же данные могут совместно использоваться несколькими электронными таблицами и несколькими пользователями. Обновления, представленные несколькими пользователями, доступны для всех пользователей в соответствии с правилами безопасности. Соответственно, всегда существует одна согласованная общая версия данных.

Компоненты функциональной модели
Функциональная база данных состоит из набора измерений, которые используются для построения набора кубов. Измерение - это конечный набор элементов или элементов, которые определяют бизнес-данные, например периоды времени, продукты, области или регионы, позиции и т. д. Кубы построены с использованием любого количества измерений. Куб представляет собой набор ячеек, каждый из которых определяется набором элементов, по одному из каждого измерения. Каждая ячейка в кубе содержит значение.
Куб - это фактически функция, которая присваивает значение каждой n-й клетке декартового произведения размерностей.
Значение ячейки может быть назначено извне или в результате вычисления, которые используют другие ячейки в том же кубе или других кубах. Определение куба включает формулы, которые определяют расчет таких ячеек. Ячейки также могут быть пустыми и считаются нулевыми для поддержки интеграции данных.
Как и в случае с электронными таблицами, пользователям не нужно беспокоиться о выполнении перерасчета. Когда запрашивается значение ячейки, возвращаемое значение обновляется относительно значений всех ячеек, которые входят в его вычисление, то есть ячеек, от которых оно зависит.

Функциональные базы данных и аналитика
Функциональная база данных объединяет данные из нескольких источников и связывает наборы данных в единые модели. Она также позволяет контролировать данные, разбросанные по нескольким электронным таблицам. Это позволяет пользователям видеть общую картину, которая объединяет несколько компонентов, например, автоматически переводить планирование рабочей силы в полную финансовую картину. Это дает им единую точку входа для разработки глобальных идей, основанных на различных источниках.
Функциональная база данных, например электронные таблицы, также позволяет пользователям изменять входные значения, в то время как все зависимые значения обновляются. Это облегчает эксперименты «что-если» и создание и сравнение нескольких сценариев. Затем пользователи могут видеть сценарии рядом и выбирать наиболее подходящие. Планируя, пользователи могут сходиться на наиболее выгодном пути действий путем многократного ре-анализа и взаимодействия с результатами. Эффективные идеи основаны на этом тесном взаимодействии с данными, которые пользователи обычно совершают с электронными таблицами
Функциональная база данных не только предоставляет общее интерактивное хранилище данных. Он также объединяет модели, разработанные аналитиками, которые знают конкретную область бизнеса, которую могут использовать все пользователи. Чтобы облегчить эту задачу, функциональная база данных сохраняет возможность интерактивного моделирования ячейки в электронной таблице. Это делает возможными модели, которые более точно отражают сложности деловой реальности.
Возможно, самый большой вклад функциональной базы данных в аналитику связан с содействием сотрудничеству. Это позволяет нескольким людям и организациям не только делиться единой версией, но моделью, которая динамична и постоянно меняется. Её автоматические вычисления быстро объединяют и согласовывают входные данные из нескольких источников. Это способствует взаимодействию различных отделов, облегчает множественные итерации мыслительных процессов и позволяет свести разные точки зрения и договорится. Кроме того, поскольку каждая часть модели разработана людьми, которые являются экспертами в своей конкретной области, она может использовать опыт и идеи, существующие в организации.

Ссылки
Почитать ещё
"Basic Set Theory". Stanford Encyclopedia of Philosophy. http://plato.stanford.edu/entries/set-theory/primer.html
Bird R.S., Wadler P.L. Introduction to Functional Programming. Prentice Hall (1988).
Buneman P., Functional Database Languages and the Functional Data Model. A position paper for the FDM workshop (June 1997) http://www.cis.upenn.edu/~peter/fdm-position.html.
Codd, E. F.  A Relational Model of Data for Large Shared Data Banks. Comm. ACM 13, 6 (June, 1970)
Henderson P. Functional Programming Application and Implementation. Prentice Hall (1980).
Hrbacek, K and Jech, T  Introduction to Set Theory, Third Edition, Marcel Dekker, Inc., New York 1999.
Lang, Serge (1987), Linear algebra, Berlin, New York: Springer-Verlag, ISBN 978-0-387-96412-6
C.M. Necco, J.N. Oliveira, L. Quintas. A functional approach for on line analytical processing, 2006. WISBD, III Workshop de I	ngeniería de Software y Bases de Datos. CACIC'06, XII Congreso Argentino de Ciencias de la Computación, Universidad Nacional de San Luis, Argentina.
E. F. Codd. Providing olap to user-analysts: an it mandate, Apr. 1993. Technical Report, E. F. Codd and Associates.
P. Trinder, A functional data base, D.Phil Thesis, Oxford University 1989.
G. Colliat, Olap relational and multidimensional database systems, SIGMOD Record, 25(3), (1996)
T. B. Pedersen, C. S. Jensen, Multidimensional database technology, IEEE Computer 34(12), 40-46, (2001)
C. J. Date with Hugh Darwen: A Guide to the SQL standard : a users guide to the standard database language SQL, 4th ed., Addison Wesley, USA 1997, ISBN 978-0-201-96426-4
Ralph Kimball and Margy Ross, The Data Warehouse Toolkit: The Complete Guide to Dimensional Modeling (Second Edition), p. 393
What is OLAP? www.olapreport.com/fasmi.htm
BI Veredict http://www.bi-verdict.com
Karsten Oehler Jochen Gruenes Christopher Ilacqua,  IBM Cognos TM1 The Official Guide, McGraw Hill 2012