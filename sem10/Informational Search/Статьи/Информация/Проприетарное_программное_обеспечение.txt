Проприета́рное програ́ммное обеспе́чение, несвобо́дное программное обеспечение (англ. proprietary software; от proprietary «частное, патентованное, в составе собственности» + software «программное обеспечение») — программное обеспечение, являющееся частной собственностью авторов или правообладателей и не удовлетворяющее критериям свободного ПО (наличия открытого программного кода недостаточно). Правообладатель проприетарного ПО сохраняет за собой монополию на его использование, копирование и модификацию, полностью или в существенных моментах. Обычно проприетарным называют любое несвободное ПО, включая полусвободное.
Рассматриваемое понятие не связано напрямую с понятием коммерческого программного обеспечения.

Этимология
Слова англ. proprietary software обозначают программное обеспечение, которое имеет собственника, осуществляющего контроль над этим программным обеспечением. Таким образом, это выражение может быть применено ко всему программному обеспечению, которое не находится в общественном использовании. Однако слово proprietary иногда используется в рекламе как «владение монопольными правами на что-нибудь». Так и Фонд свободного программного обеспечения использует термин для выделения того, что собственник является основным фактором, в контрасте со свободным ПО, где этим фактором является свобода компьютерных пользователей.

FSF
Термин «проприетарное программное обеспечение» используется FSF (фондом свободного ПО) для определения программного обеспечения, которое с позиции Фонда не является свободным..

Полусвободное программное обеспечение
Свободное ПО, которое разрешает практически неограниченное использование, распространение и изменение (в том числе с распространением изменённых версий) ПО в некоммерческих целях, Фонд СПО ранее называл полусвободным. Как и Open Source Initiative и Debian, Фонд СПО считал данные условия неприемлемыми для свободного ПО, но отличал полусвободное ПО от собственнического. «Проприетарное ПО» и «полусвободное ПО» вместе назывались «несвободным ПО». Позже FSF отказался от понятия «полусвободного ПО», и начал использовать термин «проприетарное ПО» для всего несвободного ПО.

Средства ограничений
Предотвращение использования, копирования или модификации могут быть достигнуты правовыми и/или техническими средствами.
Технические средства включают в себя выпуск только машинно-читаемых двоичных файлов, ограничение доступа к читаемому человеком исходному коду (закрытый исходный код), затруднение использования собственноручно сделанных копий. Доступ к закрытому коду обычно имеют сотрудники компании-разработчика, но могут применяться и более гибкие условия ограничения доступа, в которых предоставление исходного кода разрешено партнёрам компании, техническим аудиторам или другим лицам в соответствии с политикой компании.
Правовые средства могут включать в себя коммерческую тайну, авторское право и патенты.

Правовая охрана
Правовая охрана компьютерных программ возможна по двум разным правовым режимам — режимом, применяемым к литературным произведениям, и режимом, применяемым к патентам. В первом случае программа идентифицируется (и охраняется) по тексту кода, во втором — по критериям патентоспособности, применяемым для изобретений (то есть нужно доказать «инновационность», «оригинальность» и «неочевидность», а также возможность решения существующей технической проблемы и коммерческую пригодность).Правовая охрана компьютерных программ основывается на положениях ряда международных соглашений и конвенций. Впрочем, почти все они в той или иной степени (как то Парижская, Бернская, Римская конвенции и Вашингтонский договор) инкорпорированы в тексте Соглашения ТРИПС, администрируемом Всемирной торговой организацией. Соглашение ТРИПС предусматривает, что компьютерные программы охраняются «подобно охране, литературных произведений в соответствии с Бернской конвенцией (1971)». Впрочем, на практике все чаще используется второй режим охраны проприетарного цифрового контента в виде патента (ст. 27 ТРИПС). Например, в США, первый патент на программного обеспечение в США был выдан в 50-х, патент № 3,380,029 от . выданный Мартину Готсу (Martin A. Goetz). Однако полноценная правовая доктрина патентования компьютерных программ в США была сформирована лишь в 1980-х в результате ряда судебных прецедентов (Gottschallk v. Benson; Diamond v. Diehr.), которые выработали специальные критерии, применимые для патентования компьютерных программ. До этого времени нельзя говорить о патентовании компьютерных программ в США как об отлаженной процедуре. Одним из последних патентов на компьютерную программу был патент, выданный 6 января . № US 9,230,358 B2, которым охраняется метод, система и компьютерная программа визуализации виджетов. В ЕС патентование компьютерных программ основано на положении ЕПК, которое было уточнено рядом решений Европейского патентного офиса. В деле № T258/03 (Hitachi / Auction method) от 21.04.2004 г. Апелляционная палата Европейского патентного офиса указала, что ст. 52 (1) и 52 (2) ЕПК не запрещает патентование компьютерных программ, однако не каждое «техническое решение» может быть запатентовано. По мнению представителей патентного офиса, применение «технических средств» для решения проблемы вполне понятно, однако предполагает необходимость дополнения «технического решения» «инновационным».

Типичные ограничения проприетарного ПО
Существует большое количество различных бизнес-моделей, и компании, занимающиеся разработкой проприетарного программного обеспечения, составляют собственные лицензионные соглашения в соответствии с ними. Наиболее типичные ограничения проприетарного ПО приведены ниже.

Ограничение на коммерческое использование
Существует огромное количество программных продуктов, разрешающих бесплатное использование в некоммерческих целях для частных лиц, медицинских и учебных заведений, для некоммерческих организаций и т. д., однако они требуют оплаты в случае использования программного продукта с целью извлечения прибыли. Такое программное обеспечение очень популярно и широко используется, а за счёт своей бесплатности имеет хорошую техническую поддержку со стороны специалистов, у которых отсутствует необходимость дополнительных затрат на обучение.

Ограничение на распространение
Этот вид ограничений сопровождает обычно крупные программные проекты, когда правообладатель требует оплаты за каждую копию программы. Обычно с таким ограничением используются программные продукты, ориентированные на узкий «профессиональный» сегмент рынка или у программного обеспечения, требующегося большому числу пользователей. Примером может служить пакет программ Adobe CS6 или операционная система Windows 8.

Ограничение на изучение, модификацию и т. п.
Этот вид ограничения используется только в программных пакетах с закрытыми исходными кодами и может запрещать или ограничивать любую модификацию программного кода, дизассемблирование и декомпиляцию.

Проприетарность «по умолчанию»
По правовым и техническим причинам ПО по умолчанию обычно является проприетарным.
Законы об авторском праве действует по умолчанию, делая нетривиальные произведения проприетарными.
ПО на компилируемых языках используется в виде, не предназначенном для редактирования, то есть без исходных текстов. Автор может не распространять исходные тексты по привычке или считать их недостаточно качественными, чтобы было прилично их показывать.
Из-за разнообразия лицензий автору может быть трудно выбрать лучшую.
Среди сторонников свободного ПО существуют различные мнения о важности свобод пользователя по отношению к ПО, которое исполняется только на удалённой системе (серверное ПО, которое не подпадало под копилефтные условия GNU GPL, из-за чего появилась Affero GPL), или как будто «в Интернете», но на самом деле каждый раз загружается для исполнения в компьютер пользователя (например, скрипты с веб-сайтов, занимающие порой сотни килобайтов при нечитаемо укороченных именах функций), или алгоритмам, реализованным в виде аппаратного обеспечения (что уменьшает долю обычного несвободного ПО, но не делает свободнее его пользователя). См. GNU AGPL, открытое аппаратное обеспечение, GNUzilla (веб-браузер с дополнением, блокирующим выполнение нетривиальных несвободных JavaScript‐программ).


== Примечания ==