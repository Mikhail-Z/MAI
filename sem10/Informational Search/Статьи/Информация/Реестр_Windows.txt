Реестр Windows (англ. Windows Registry), или системный реестр — иерархически построенная база данных параметров и настроек в большинстве операционных систем Microsoft Windows.
Реестр содержит информацию и настройки для аппаратного обеспечения, программного обеспечения, профилей пользователей, предустановки. Большинство изменений в Панели управления, ассоциации файлов, системные политики, список установленного ПО фиксируются в реестре.
Реестр Windows был введён для упорядочения информации, хранившейся до этого во множестве INI-файлов, обеспечения единого механизма (API) записи-чтения настроек и избавления от проблем коротких имён, отсутствия разграничения прав доступа и медленного доступа к ini-файлам, хранящимся на файловой системе FAT16, имевшей серьёзные проблемы быстродействия при поиске файлов в каталогах с большим их количеством. Со временем (окончательно — с появлением файловой системы NTFS) проблемы, решавшиеся реестром, исчезли, но реестр остался из-за обратной совместимости и присутствует во всех версиях Windows, включая последнюю. Поскольку сейчас не существует реальных предпосылок для использования подобного механизма, Microsoft Windows — единственная (не считая ReactOS и eComStation) операционная система из используемых сегодня, в которой используется механизм реестра операционной системы.

История возникновения и развития реестра
Реестр Windows 3.1
Сам реестр как древовидная иерархическая база данных (registration database — регистрационная база) впервые появился в Windows 3.1 (апрель 1992). Это был всего один двоичный файл, который назывался REG.DAT и хранился в каталоге C:\Windows\. Реестр Windows 3.1 имел только одну ветку HKEY_CLASSES_ROOT. Он служил для связи DDE, а позднее и OLE-объектов.
Одновременно c появлением реестра в Windows 3.1 появилась программа REGEDIT.EXE для просмотра и редактирования реестра.
Первый реестр уже имел возможность импорта данных из *.REG-файлов. В базовой поставке шёл файл SETUP.REG, содержащий данные по основным расширениям и типам файлов.
Реестр Windows 3.1 имел ограничение на максимальный размер файла REG.DAT — 64 Кбайт. Если реестр превышал этот размер, файл реестра (REG.DAT) приходилось удалять и собирать заново либо из *.REG-файлов, либо вводить данные вручную.

Реестр Windows NT 3.1
Следующий шаг был сделан в Windows NT 3.1 (июль 1993). Произошёл отказ от устаревших файлов MS-DOS: AUTOEXEC.BAT и CONFIG.SYS, а также от INI-файлов, как от основных файлов конфигурации. На «регистрационную базу» (реестр) была переведена вся конфигурация системы. Основой конфигурации системы стал реестр. Он имел 4 корневых раздела: HKEY_ LOCAL_MACHINE, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT и HKEY_USERS.
Реестр стал «сборным»: на диске он хранился в файлах: DEFAULT, SOFTWARE, SYSTEM, а при запуске системы из этих файлов собиралась единая БД.
В комплекте поставки оставался файл REGEDIT.EXE, который по-прежнему позволял просматривать и редактировать только ветку HKEY_CLASSES_ROOT, и появился файл REGEDT32.EXE, который позволял редактировать все ветки реестра.
Далее технология и идеология (назначение) реестра уже не менялись. Все последующие версии Windows (NT 3.5, 95, NT 4.0, 98, 2000, XP, Vista, 7,8) использовали реестр как основную БД, содержащую все основные данные по конфигурации как самой ОС, так и прикладных программ. Далее менялись названия файлов реестра и их расположение, а также название и назначение ключей.

Современный реестр Windows
Реестр в том виде, как его использует Windows и как видит его пользователь в процессе использования программ работы с реестром, формируется из различных данных. Чтобы получилось то, что видит пользователь, редактируя реестр, происходит следующее.
Вначале, в процессе установки (инсталляции) и настройки Windows, на диске формируются файлы, в которых хранится часть данных, относящихся к конфигурации системы.
Затем, в процессе каждой загрузки системы, а также в процессе каждого входа и выхода каждого из пользователей, формируется некая виртуальная сущность, называемая «реестром» — объект REGISTRY\. Данные для формирования «реестра» частично берутся из тех самых файлов (Software, System …), частично из информации, собранной ntdetect при загрузке (HKLM\Hardware\Description).
То есть часть данных реестра хранится в файлах, а часть данных формируется в процессе загрузки Windows.
Для редактирования, просмотра и изучения реестра стандартными средствами Windows (программы regedit.exe и regedt32.exe) доступны именно ветки реестра. После редактирования реестра и/или внесения в него изменений эти изменения сразу записываются в файлы.
Однако есть программы сторонних разработчиков, которые позволяют работать непосредственно с файлами.
Программы оптимизации реестра, твикеры, а также инсталляторы и деинсталляторы программ работают через специальные функции работы с реестром.

Файлы реестра (Хранение данных реестра)
Windows 95/98
User.dat
System.dat

Windows ME
Classes.dat
User.dat

Windows 2000
Windows XP
в Windows XP файлы реестра хранятся в следующих местах:

03= Ветка реестра «HKEY_LOCAL_MACHINE\SYSTEM» формируется из файла «%SystemRoot%\System32\config\SYSTEM»
04= Ветка реестра «HKEY_LOCAL_MACHINE\SOFTWARE» формируется из файла «%SystemRoot%\System32\config\SOFTWARE»
05= Ветка реестра «HKEY_LOCAL_MACHINE\SECURITY» формируется из файла «%SystemRoot%\System32\config\SECURITY»
06= Ветка реестра «HKEY_LOCAL_MACHINE\SAM» формируется из файла «%SystemRoot%\System32\config\SAM»
07= Ветка реестра «HKEY_USERS\.DEFAULT» формируется из файла «%SystemRoot%\System32\config\DEFAULT»09= Ветка реестра «HKEY_USERS\S-1-5-19» формируется из файла «%SystemDrive%\Documents and Settings\LocalService\NTUSER.DAT»
10= Ветка реестра «HKEY_USERS\S-1-5-20» формируется из файла «%SystemDrive%\Documents and Settings\NetworkService\NTUSER.DAT»
11= Ветка реестра «HKEY_USERS\<SID_пользователя>» формируется из файла «%SystemDrive%\Documents and Settings\<Папка пользователя>\NTUSER.DAT»
12= Ветка реестра «HKEY_USERS\<SID_пользователя>_Classes» формируется из файла «%SystemDrive%\Documents and Settings\<Папка пользователя>\Local Settings\Application Data\Microsoft\Windows\UsrClass.dat»

Windows Vista
В Windows Vista файлы реестра хранятся там же, где и в Windows XP.

Windows 7
В Windows 7, согласно сведениям из HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\hivelist файлы реестра хранятся в следующих местах:

01= Ветка реестра «HKEY_LOCAL_MACHINE\HARDWARE» формируется в зависимости от оборудования (динамически);
02= Ветка реестра «HKEY_LOCAL_MACHINE\BCD00000000» формируется из файла «%SystemRoot%\Boot\BCD»
03= Ветка реестра «HKEY_LOCAL_MACHINE\SYSTEM» формируется из файла «%SystemRoot%\System32\config\SYSTEM»
04= Ветка реестра «HKEY_LOCAL_MACHINE\SOFTWARE» формируется из файла «%SystemRoot%\System32\config\SOFTWARE»
05= Ветка реестра «HKEY_LOCAL_MACHINE\SECURITY» формируется из файла «%SystemRoot%\System32\config\SECURITY»
06= Ветка реестра «HKEY_LOCAL_MACHINE\SAM» формируется из файла «%SystemRoot%\System32\config\SAM»
07= Ветка реестра «HKEY_USERS\.DEFAULT» формируется из файла «%SystemRoot%\System32\config\DEFAULT»
08= Ветка реестра «HKEY_USERS\S-1-5-18» формируется из файла «%SystemRoot%\System32\config\systemprofile\NTUSER.DAT» (относится к учётной записи system)
09= Ветка реестра «HKEY_USERS\S-1-5-19» формируется из файла «%SystemRoot%\ServiceProfiles\LocalService\NTUSER.DAT» (относится к учётной записи LocalService)
10= Ветка реестра «HKEY_USERS\S-1-5-20» формируется из файла «%SystemRoot%\ServiceProfiles\NetworkService\NTUSER.DAT» (относится к учётной записи NetworkService)
11= Ветка реестра «HKEY_USERS\<SID_пользователя>» формируется из файла «%USERPROFILE%\NTUSER.DAT» где под %USERPROFILE% подразумевается путь к папке соответствующего пользователя.
12= Ветка реестра «HKEY_USERS\<SID_пользователя>_Classes» формируется из файла «%USERPROFILE%\AppData\Local\Microsoft\Windows\UsrClass.dat»Резервные копии файлов реестра DEFAULT, SAM, SECURITY, SOFTWARE и SYSTEM находятся в папке «%SystemRoot%\System32\config\RegBack». Само резервное копирование производится силами Планировщика задач в 0 ч. 00 мин. каждые 10 дней по заданию «RegIdleBackup», расположенному в иерархии задач по пути «\Microsoft\Windows\Registry».
Ветка реестра «HKEY_CURRENT_USER» формируется из файла «%USERPROFILE%\NTUSER.DAT», где под %USERPROFILE% подразумевается путь к папке текущего пользователя.
Реестр 64-разрядных версий Windows XP и Windows Server 2003 и Windows Vista подразделяется на 32- и 64-разрядные разделы. Большинство 32-разрядных разделов имеют те же имена, что и их аналоги в 64-разрядном разделе, и наоборот. По умолчанию редактор реестра 64-разрядных версий Windows XP и Windows Server 2003 и Windows Vista отображает 32-разрядные разделы в следующем узле:
HKEY_LOCAL_MACHINE\Software\WOW6432Node

Windows CE/Mobile
Описание разделов реестров
HKEY_CURRENT_USER
Данный раздел содержит настройки текущего активного пользователя, вошедшего в систему. Здесь хранятся папки пользователя, цвета экрана и параметры панели управления. Эти сведения сопоставлены с профилем пользователя. Вместо полного имени раздела иногда используется аббревиатура HKCU. Хотя этот раздел выглядит как один из основных в редакторе реестра, он является всего лишь ссылкой на один из профилей HKEY_USERS\.

HKEY_USERS
Раздел HKEY_USERS (псевдоним HKU) содержит информацию о профилях всех пользователей данного компьютера.
Данный раздел практически никогда не используется пользователями. Следует отметить связь данного корневого раздела с разделом HKEY_CURRENT_USER, который фактически является ссылкой подраздела корневого раздела HKEY_USERS, хранящего сведения о текущем пользователе.

HKEY_LOCAL_MACHINE
Раздел содержит параметры конфигурации, относящиеся к данному компьютеру (для всех пользователей). Вместо полного имени раздела иногда используется аббревиатура HKLM.

HKEY_CLASSES_ROOT
Является подразделом HKEY_LOCAL_MACHINE\Software\Classes. В основном, содержит информацию о зарегистрированных типах файлов и объектах COM и ActiveX. Вместо полного имени раздела иногда используется аббревиатура HKCR. Начиная с Windows 2000 эти сведения хранятся как в HKEY_LOCAL_MACHINE, так и в HKEY_CURRENT_USER. Раздел HKEY_LOCAL_MACHINE\Software\Classes содержит параметры по умолчанию, которые относятся ко всем пользователям локального компьютера. Параметры, содержащиеся в разделе HKEY_CURRENT_USER\Software\Classes, переопределяют принятые по умолчанию и относятся только к текущему пользователю. Раздел HKEY_CLASSES_ROOT включает в себя данные из обоих источников. Кроме того, раздел HKEY_CLASSES_ROOT предоставляет объединённые данные программам, написанным под ранние версии Windows. Изменения настроек текущего пользователя выполняются в разделе HKEY_CURRENT_USER\Software\Classes. Модификация параметров по умолчанию должна производиться в разделе HKEY_LOCAL_MACHINE\Software\Classes. Данные из разделов, добавленных в HKEY_CLASSES_ROOT, будут сохранены системой в разделе HKEY_LOCAL_MACHINE\Software\Classes. Если изменяется параметр в одном из подразделов раздела HKEY_CLASSES_ROOT и такой подраздел уже существует в HKEY_CURRENT_USER\Software\Classes, то для хранения информации будет использован раздел HKEY_CURRENT_USER\Software\Classes, а не HKEY_LOCAL_MACHINE\Software\Classes.

HKEY_CURRENT_CONFIG
Данный раздел содержит сведения о профиле оборудования, используемом локальным компьютером при запуске системы. Является ссылкой на HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Hardware Profiles\Current

HKEY_DYN_DATA
Данный раздел имеется только в реестре ОС семейства Windows 9x/ME. Содержит динамически изменяемые данные о компьютере (загрузка процессора, размер файла подкачки и т. п.).

Команда REG ADD
Команда REG ADD добавляет в реестр системы Windows данные необходимого типа. Для удаления данных из реестра используется команда REG DELETE.

Синтаксис команды REG ADD
REG ADD <раздел> [/v <параметр> | /ve] [/t <тип>] [/s <разделитель>] [/d <данные>] [/f]
<раздел> [\\<компьютер>\]<путь>

<компьютер> Имя удаленного компьютера, если оно опущено, то по умолчанию считается равным имени локального компьютера. На удаленных компьютерах доступны только разделы HKLM и HKU.
<путь> Полный путь к разделу реестра в виде КОРЕНЬ\Подраздел. Значения [ HKLM | HKCU | HKCR | HKU | HKCC ]. <подраздел> Полный путь к разделу реестра в выбранном корневом разделе.
/v Имя добавляемого параметра в указанном разделе.
/ve  Добавить пустой параметр (По умолчанию) в указанный раздел.
/t Типы данных. [REG_SZ    | REG_MULTI_SZ  | REG_DWORD_BIG_ENDIAN    | REG_DWORD | REG_BINARY    | REG_DWORD_LITTLE_ENDIAN | REG_NONE  | REG_EXPAND_SZ ] По умолчанию, считается равным REG_SZ.
/s   Определяет разделитель, который используется для разделения данных в многострочных параметрах типа REG_MULTI_SZ. По умолчанию считается равным "\0".
/d Значение, присваиваемое добавляемому параметру реестра.
/f Принудительно перезаписывать существующие записи реестра без предупреждения.

Примеры команды Reg Add
REG ADD \\ABC\HKLM\Software\MyCo Добавляет раздел HKLM\Software\MyCo на удаленный компьютер ABC
REG ADD HKLM\Software\MyCo /v Data /t REG_BINARY /d fe340ead Добавляет параметр с именем: Data, типом: REG_BINARY, и значением: fe340ead
REG ADD HKLM\Software\MyCo /v MRU /t REG_MULTI_SZ /d fax\0mail Добавляет параметр с именем: MRU, типом: REG_MUTLI_SZ,  и значением: fax\0mail\0\0
REG ADD HKLM\Software\MyCo /v Path /t REG_EXPAND_SZ /d %%systemroot%% Добавляет параметр с именем: Path, типом: REG_EXPAND_SZ,  и значением:%systemroot%. Примечание:  Используйте в строке двойные символы процента ( %% )

Описание команды REG DELETE
Команда reg delete удаляет ключи в реестре операционной системы Windows.

Синтаксис команды REG DELETE
REG DELETE <раздел> [/v <параметр> | /ve | /va] [/f]
REG DELETE <раздел> Имя раздела в формате: [\\Компьютер\]Путь

<компьютер>  Имя удаленного компьютера, если оно опущено, то по умолчанию считается равным имени локального компьютера. Для удаленных компьютеров доступны только HKLM и HKU. <путь> Полный путь к разделу реестра в виде: КОРЕНЬ\Подраздел <КОРЕНЬ> Корневой раздел. Значения: [ HKLM | HKCU | HKCR | HKU | HKCC ] <подраздел>  Полный путь к разделу реестра в выбранном корневом разделе.
<параметр> Имя удаляемого параметра в указанном разделе. Если опущено, из указанного раздела будут удалены все подразделы и параметры.
/ve  Удалять безымянные параметры.
/va Запрашивать все параметры данного раздела.
/f Удалять принудительно, без дополнительного предупреждения.Командная строка — команда REG DELETE.

Примеры команды reg delete
REG DELETE HKLM\Software\MyCo\MyApp\Timeout Удаляет раздел реестра Timeout и все его подразделы и параметры.
REG DELETE \\ZODIAC\HKLM\Software\MyCo /v MTU Удаляет параметр MTU из раздела MyCo реестра на компьютере ZODIAC.

Команда REG COMPARE
Команда REG COMPARE сравнивает в реестре операционной системы Windows данные. Для копирования данных в реестре используется команда REG COPY.

Синтаксис команды REG COMPARE
REG COMPARE <раздел1> <раздел2> [/v <параметр> | /ve] [<вывод>] [/s]
<раздел> [\\Компьютер\]Путь<компьютер>  Имя удаленного компьютера, если оно опущено, то по умолчанию считается равным имени локального компьютера. Для удаленных компьютеров доступны только HKLM и HKU.
<путь> Полный путь к разделу реестра в виде: КОРЕНЬ\Подраздел. Если Подраздел2 не указан, он считается равным Подраздел1. <КОРЕНЬ> Корневой раздел. Значения: [ HKLM | HKCU | HKCR | HKU | HKCC ].
<подраздел>  Полный путь к разделу реестра в выбранном корневом разделе.
<параметр> Имя параметра в указанном разделе, для сравнения. Если опущен, будут сравниваться все параметры раздела.
/ve Сравнивать безымянные параметры.
/s Сравнивать все подразделы и параметры.
<вывод> Одно из значений: [/oa | /od | /os | /on].
Если не указано, используется значение /od.
/oa Выводить и совпадения, и отличия.
/od Выводить только отличия.
/os Выводить только совпадения.
/on Не выводить результаты сравнения.
Код возврата:
0 — Успешно, сравниваемые данные идентичны
1 — При обработке произошла ошибка
2 — Успешно, сравниваемые данные отличаются

Примеры команды REG COMPARE
REG COMPARE HKLM\Software\MyCo\MyApp HKLM\Software\MyCo\SaveMyApp Сравнивает все параметры раздела MyApp с параметрами раздела SaveMyApp
REG COMPARE HKLM\Software\MyCo HKLM\Software\MyCo1 /v Version Сравнивает значение параметра Version в разделах MyCo и MyCo1
REG COMPARE \\ZODIAC\HKLM\Software\MyCo \\. /s Сравнивает все подразделы и значения параметров в разделе HKLM\Software\MyCo реестра на компьютере ZODIAC с аналогичным разделом на локальном компьютере

Команда REG COPY
Команда reg copy копирует ключи реестра операционной системы Windows. А для сравнения данных в реестре используется команда Reg Compare.

Синтаксис команды REG COPY
REG COPY <раздел1> <раздел2> [/s] [/f]
REG COPY <раздел> Имя раздела в формате: [\\Компьютер\]Путь

<компьютер>  Имя удаленного компьютера, если оно опущено, то по умолчанию считается равным имени локального компьютера. Для удаленных компьютеров доступны только HKLM и HKU.
<путь> Полный путь к разделу реестра в виде: КОРЕНЬ\Подраздел. <КОРЕНЬ> Корневой раздел. Значения: [ HKLM | HKCU | HKCR | HKU | HKCC ].
<подраздел>  Полный путь к разделу реестра в выбранном корневом разделе.
/s Копировать все подразделы и параметры.
/f Принудительное копирование без дополнительного предупреждения.

Примеры команды Reg Copy
REG COPY HKLM\Software\MyCo\MyApp HKLM\Software\MyCo\SaveMyApp /s Копирует все подразделы и параметры раздела MyApp в раздел SaveMyApp
REG COPY \\ZODIAC\HKLM\Software\MyCo HKLM\Software\MyCo1 Копирует все параметры раздела MyCo с компьютера ZODIAC в раздел MyCo1 на локальном компьютере

Описание команды REG EXPORT
Команда REG EXPORT экспортирует из реестра операционной системы данные. А для импорта данных в реестр используется команда REG IMPORT.

Синтаксис и параметры команды REG EXPORT
REG EXPORT <раздел> <имя файла>
<раздел> Полный путь к разделу реестра в виде: КОРЕНЬ\Подраздел (только для локального компьютера).<КОРЕНЬ> Корневой раздел. Значения: [ HKLM | HKCU | HKCR | HKU | HKCC ]. <подраздел>  Полный путь к разделу реестра в выбранном корневом разделе.
<имя файла> Имя файла на диске для экспорта.Командная строка команда REG EXPORT

Примеры команды REG EXPORT
REG EXPORT HKLM\Software\MyCo\MyApp AppBkUp.reg — Экспортирует все подразделы и значения параметров раздела MyApp в файл AppBkUp.reg

Описание команды REG IMPORT
Команда REG IMPORT импортирует в реестр операционной системы Windows данные. А для экспорта данных из реестра используется команда REG EXPORT.

Синтаксис и параметры команды REG IMPORT
REG IMPORT <имя файла><имя файла>  Имя файла для импорта (только на локальном компьютере).
Командная строка команда REG IMPORT

Примеры команды REG IMPORT
REG IMPORT AppBkUp.reg — Импортирует записи реестра из файла AppBkUp.reg

Описание команды REG LOAD
Команда REG LOAD загружает в реестр данные. А для выгрузки данных из реестра используется команда REG UNLOAD.

Синтаксис и параметры команды REG LOAD
REG LOAD <раздел> <имя файла>
<раздел> Полный путь к разделу реестра в виде: КОРЕНЬ\Подраздел (только для локального компьютера). <КОРЕНЬ> Возможные значения для корневого раздела: [ HKLM | HKU ]. <подраздел> Имя нового раздела, в который будет загружен сохраненный ранее файл куста реестра.
<имя файла> Имя загружаемого файла куста реестра.Для создания этого файла используйте команду REG SAVE.
Командная строка команда REG LOAD

Примеры команды REG LOAD
REG LOAD HKLM\TempHive TempHive.hiv — Загружает файл TempHive.hiv в раздел HKLM\TempHive

Описание команды REG UNLOAD
Команда REG UNLOAD выгружает из реестра данные. Для загрузки данных в реестр используется команда REG LOAD.

Синтаксис и параметры команды REG UNLOAD
REG UNLOAD <раздел><раздел> Полный путь к разделу реестра в виде: КОРЕНЬ\Подраздел (только для локального компьютера).
<КОРЕНЬ>     Возможные значения для корневого раздела: [ HKLM | HKU ].
<подраздел>  Имя подраздела выгружаемого куста.

Примеры команды REG UNLOAD
REG UNLOAD HKLM\TempHive — Выгружает куст TempHive из HKLM.

Описание команды REG SAVE
Команда REG SAVE сохраняет ключи реестра в файл операционной системы Windows. А для восстановления ключей реестра используется команда REG RESTORE.

Синтаксис и параметры команды REG SAVE
REG SAVE <раздел> <имя файла><раздел> Полный путь к разделу реестра в виде: КОРЕНЬ\Подраздел. <КОРЕНЬ> — Корневой раздел. Значения: [ HKLM | HKCU | HKCR | HKU | HKCC ]. <подраздел> — Полный путь к разделу реестра в выбранном корневом разделе.
<имя файла> Имя сохраняемого файла на диске. Если путь не указан, файл создается вызывающим процессом в текущей папке.
Командная строка — команда REG SAVE.

Примеры команды REG SAVE
REG SAVE HKLM\Software\MyCo\MyApp AppBkUp.hiv — Сохраняет раздел MyApp в файле AppBkUp.hiv в текущей папке.

Описание команды REG RESTORE
Команда REG RESTORE восстанавливает данные реестра операционной системы Windows. А для сохранения данных реестра используется команда REG SAVE.

Синтаксис и параметры команды REG RESTORE
REG RESTORE <раздел> <имя файла>
<путь> — Полный путь к разделу реестра в виде: КОРЕНЬ\Подраздел (только для локального компьютера). <КОРЕНЬ> — Корневой раздел. Значения: [ HKLM | HKCU | HKCR | HKU | HKCC ]. <подраздел> — Полное имя раздела реестра, в котором будут сохранены данные из файла. Существующие разделы и параметры будут перезаписаны.
<имя файла> — Имя файла сохраненного раздела для его восстановления.Командная строка — команда REG RESTORE.

Примеры команды REG RESTORE
REG RESTORE HKLM\Software\Microsoft\ResKit NTRKBkUp.hiv — Восстанавливает подраздел ResKit из файла NTRKBkUp.hiv, перезаписывая текущие подразделы и параметры.

Описание команды REG QUERY
Команда REG QUERY служит для просмотра содержимого реестра операционной системы Windows. А для сохранения ключей реестра используется команда REG SAVE.

Синтаксис и параметры команды REG QUERY
REG QUERY Раздел [/v Параметр | /ve] [/s]
Раздел Имя раздела в формате: [\\Компьютер\]Путь. Компьютер — Имя удаленного компьютера, если оно опущено, то по умолчанию считается равным имени локального компьютера. Для удаленных компьютеров доступны только HKLM и HKU. Путь — Полный путь к разделу реестра в виде: КОРЕНЬ\Подраздел КОРЕНЬ Корневой раздел. Значения: [ HKLM | HKCU | HKCR | HKU | HKCC ]. Подраздел — Полный путь к разделу реестра в выбранном корневом разделе.
/v Запрос указанного раздела реестра
Параметр Имя запрашиваемого параметра в указанном разделе. Если опущено, будут запрошены значения всех параметров
/ve Запрос стандартного параметра с пустым именем
/s Запрос всех подразделов и их параметров

Примеры команды REG QUERY
REG QUERY HKLM\Software\Microsoft\ResKit /v Version — Отображает значение параметра Version в реестре
REG QUERY HKLM\Software\Microsoft\ResKit\Nt\Setup /s — Отображает все подразделы и параметры в разделе Setup реестра.

Критика
Способ хранения параметров и настроек операционной системы при помощи реестра Windows часто подвергается критике по следующим причинам:

Реестр хранится в небольшом количестве объёмных (по нескольку сотен мегабайт) файлов, вследствие чего высока вероятность повреждения данных. Также большие файлы подвержены фрагментации, что замедляет доступ к реестру на обычных жёстких дисках (твердотельные накопители решают эту проблему).
В связи с тем, что, помимо настроек, в реестре хранится различная информация системы и приложений (например, многие приложения хранят в реестре список недавно открытых файлов), размер реестра значительно увеличивается по мере использования операционной системы. Эта проблема частично решается при помощи специальных утилит.
Не все настройки системы хранятся в реестре, соответственно перенос настроек системы путём копирования реестра невозможен.
Некоторые программы не могут работать без параметров, занесенных в реестр, что создаёт трудности при переносе их с компьютера на компьютер, или теряют данные после переустановки операционной системы.
Реестр очень похож на виртуальную файловую систему, работающую поверх реальной файловой системы. При этом, как для файловой системы, реестр очень неустойчив к сбоям. Фактически один неверный байт в файле куста (ветки реестра, подобие корневому каталогу в файловых системах) приводит к сбою при попытке загрузки куста, и (для системных кустов) отказу операционной системы. Надёжность такого реестра никогда не будет выше надёжности файловой системы, на которой расположены его файлы. Однако версии Windows начиная с NT используют логи транзакций в качестве средства защиты от повреждений при обновлении реестра. Текущие версии Windows используют логи двух уровней для того, чтобы обеспечить целостность реестра в случае отказа питания или других подобных событий во время обновления реестра. Даже в случае ошибки, из-за которой невозможно восстановить реестр, Windows может починить и реинициализировать повреждённые записи реестра во время загрузки системы.Критики приводят в пример UNIX-подобные операционные системы, где нет реестра и выполняемые им задачи решаются другими средствами.

Программы для работы с реестром
WinTools.net
glary utilites
regedit.exe
regedt32.exe
Reg Organizer
Test-Run by BB
CCleaner
Ashampoo WinOptimizer
Wise Reg Cleaner
AuslogicsBoostSpeed
TuneUp Utilities
Jv16 PowerTools
chntpw

Лже-оптимизаторы и дефрагментаторы реестра
Существуют активно и недобросовестно рекламируемые программы, обещающие в числе прочего оптимизацию работы реестра. Они могут использоваться как для получения прибыли от продажи по необоснованно высокой цене, так и для распространения вирусов.

Терминология
В описании реестра в английской литературе, среди прочих, используется термин Hive. В некоторых работах его переводят на русский как «дерево». Microsoft в своих документах переводит это как куст. Например:
Registry hive HKEY_LOCAL_MACHINE\SAM == Куст реестра HKEY_LOCAL_MACHINE\SAMДрево (куст) реестра — это подмножество разделов, подразделов и параметров реестра, которому сопоставлен набор вспомогательных файлов, содержащих резервные копии этих данных.

Примечания
Ссылки
Описание реестра Microsoft Windows  (рус.)
Интересное о реестре Windows, 15 июня 2009 (статья из ComputerBild)
Как создавать, изменять или удалять подразделы и значения системного реестра с помощью файла записей регистрации (.reg) (англ.)
MSDN — структура реестра, программирование реестра  (англ.)
Описание ключей реестра на официальном сайте TechNet (англ.)
Описание известных идентификаторов безопасности в операционных системах Windows (рус.)