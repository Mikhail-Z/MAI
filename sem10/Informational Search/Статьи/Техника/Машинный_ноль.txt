Машинный ноль (Машинный нуль) — числовое значение с таким отрицательным порядком, которое воспринимается машиной как ноль.
Машинное эпсилон (англ. Machine epsilon) — числовое значение, меньше которого невозможно задавать относительную точность для любого алгоритма, возвращающего вещественные числа. Абсолютное значение «машинного эпсилон» зависит от разрядности сетки применяемой ЭВМ, типа (разрядности) используемых при расчетах чисел, и от принятой в конкретном трансляторе структуры представления вещественных чисел (количества бит, отводимых на мантиссу и на порядок). Формально машинное эпсилон обычно определяют как минимальное из чисел eps, для которого 1+eps>1 при машинных расчетах с числами данного типа. Альтернативное определение — максимальное положительное eps, для которого справедливо равенство 1+eps=1.
Практическая важность машинного эпсилон связана с тем, что два (отличных от нуля) числа являются одинаковыми с точки зрения машинной арифметики, если их относительная разность по модулю меньше (при определении первого типа) или не превосходит (при определении второго типа) машинного эпсилон.

В языках программирования
Язык Си
В языке Си существуют предельные константы FLT_EPSILON, DBL_EPSILON и LDBL_EPSILON являющиеся «машинными эпсилон», соответствующими первому определению: FLT_EPSILON = 2−23 ≈ 1.19e-07 — это машинное эпсилон для чисел типа float (32 бита), DBL_EPSILON = 2−52 ≈ 2.20e-16 — для типа double (64 бита), и LDBL_EPSILON = 2−63 ≈ 1.08e-19 — для типа long double (80 бит). При альтернативном определении соответствующие машинными эпсилон будут вдвое меньше: 2−24 , 2−53 и 2−64 .В некоторых компиляторах Си (например gcc, Intel’s C/C++ compiler) допускается использование переменных четверной точности (_float128, _Quad). Соответствующие машинные эпсилон равны 2−112 ≈ 1.93e-34 и 2−113 ≈ 9.63e-35.

Пример
Пример вычисления машинного эпсилона (не путать с машинным нулём) на языке Си.

Пример на языке C++.

Пример на Python

Вывод может быть таким (с использованием IPython):

In [1]: machineEpsilon(int)
Out[1]: 1

In [2]: machineEpsilon(float)
Out[2]: 2.2204460492503131e-16

In [3]: machineEpsilon(complex)
Out[3]: (2.2204460492503131e-16+0j)

См. также
−0 (программирование)


== Примечания ==